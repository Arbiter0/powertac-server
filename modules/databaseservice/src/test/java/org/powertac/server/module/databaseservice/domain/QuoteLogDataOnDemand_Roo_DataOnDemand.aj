// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.powertac.server.module.databaseservice.domain;

import java.util.List;
import java.util.Random;
import org.powertac.server.module.databaseservice.domain.QuoteLog;
import org.springframework.stereotype.Component;

privileged aspect QuoteLogDataOnDemand_Roo_DataOnDemand {
    
    declare @type: QuoteLogDataOnDemand: @Component;
    
    private Random QuoteLogDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<QuoteLog> QuoteLogDataOnDemand.data;
    
    public QuoteLog QuoteLogDataOnDemand.getNewTransientQuoteLog(int index) {
        org.powertac.server.module.databaseservice.domain.QuoteLog obj = new org.powertac.server.module.databaseservice.domain.QuoteLog();
        return obj;
    }
    
    public QuoteLog QuoteLogDataOnDemand.getSpecificQuoteLog(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        QuoteLog obj = data.get(index);
        return QuoteLog.findQuoteLog(obj.getId());
    }
    
    public QuoteLog QuoteLogDataOnDemand.getRandomQuoteLog() {
        init();
        QuoteLog obj = data.get(rnd.nextInt(data.size()));
        return QuoteLog.findQuoteLog(obj.getId());
    }
    
    public boolean QuoteLogDataOnDemand.modifyQuoteLog(QuoteLog obj) {
        return false;
    }
    
    public void QuoteLogDataOnDemand.init() {
        data = org.powertac.server.module.databaseservice.domain.QuoteLog.findQuoteLogEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'QuoteLog' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<org.powertac.server.module.databaseservice.domain.QuoteLog>();
        for (int i = 0; i < 10; i++) {
            org.powertac.server.module.databaseservice.domain.QuoteLog obj = getNewTransientQuoteLog(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
