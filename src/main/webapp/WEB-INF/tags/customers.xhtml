<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui">


<h:body>
	<ui:fragment>

		<ui:repeat var="customer" value="#{customers}">
			<script type="text/javascript">
	var bootstrapLineChartData#{customer.customerInfo.id}=null;
	
	var totalkWhLineChartData#{customer.customerInfo.id}=null;
	var productionKWhLineChartData#{customer.customerInfo.id}=null;
	var consumptionKWhLineChartData#{customer.customerInfo.id}=null;
	
	var totalChargeLineChartData#{customer.customerInfo.id}=null;
	var inflowChargeLineChartData#{customer.customerInfo.id}=null;
	var outflowChargeLineChartData#{customer.customerInfo.id}=null;
	
	</script>
		</ui:repeat>


		<p:tabView id="tabCustomers" var="customer" value="#{customers}"
			dynamic="true" cache="true">




			<p:tab title="#{customer.customerInfo.name}">

				<h:panelGrid columns="1" cellpadding="10">
					<!-- TODO: powertype icons	<p:graphicImage value="${broker.appearance.iconLocation}"
						width="85" height="85" />  -->
					<h:panelGrid columns="2" cellpadding="10">
						<h:outputText value="Population: " />
						<h:outputText value="#{customer.customerInfo.population}"
							style="font-weight: bold" />
						<h:outputText value="Subscriptions: " />
						<h:outputText value="#{customer.customerModel.customerCount}"
							style="font-weight: bold" />
					</h:panelGrid>

				</h:panelGrid>

				<p:tabView dynamic="true" cache="true">
				
				<p:tab title="Cash">

						<h:panelGrid columns="1" cellpadding="10">
							<!-- TODO: powertype icons	<p:graphicImage value="${broker.appearance.iconLocation}"
						width="85" height="85" />  -->
							<h:panelGrid columns="2" cellpadding="10">
								<h:outputText value="Cash inflow:" />

								<h:outputText
									value="#{customer.customerModel.cashInflow} &euro;"
									style="font-weight: bold">
									<f:convertNumber maxFractionDigits="2" />
								</h:outputText>
								<h:outputText value="Cash outflow:" />
								<h:outputText
									value="#{customer.customerModel.cashOutflow} &euro;"
									style="font-weight: bold">
									<f:convertNumber maxFractionDigits="2" />
								</h:outputText>
								<h:outputText value="Total:" />
								<h:outputText value="#{customer.customerModel.totalCash} &euro;"
									style="font-weight: bold">
									<f:convertNumber maxFractionDigits="2" />
								</h:outputText>
							</h:panelGrid>

						</h:panelGrid>

						<p:panel
							rendered="#{not empty customer.customerJson.totalChargeLineChartData}">
							<div id="totalChargeLineChartData#{customer.customerInfo.id}"
								style="width: 700px; height: 350px"></div>
							<script type="text/javascript">
				
		 			if (window.totalChargeLineChartData#{customer.customerInfo.id}!=null) {
						window.totalChargeLineChartData#{customer.customerInfo.id}.destroy();					
					}
					window.totalChargeLineChartData#{customer.customerInfo.id} = $.jqplot('totalChargeLineChartData#{customer.customerInfo.id}', [ #{customer.customerJson.totalChargeLineChartDataText},#{customer.customerJson.inflowChargeLineChartDataText},#{customer.customerJson.outflowChargeLineChartDataText} ],{
						title: 'Cash', 
						axesDefaults: {
						        labelRenderer: $.jqplot.CanvasAxisLabelRenderer},
						axes: {
							xaxis: {
						            label: "timeslot",
						            pad: 0},
						    yaxis: {
						            label: "&euro;"}},
						seriesDefaults: {
							showMarker: false
						},
						series:[
								{ label: 'total',      // label to use in the legend for this line.
								       color: '#000000'
								},
								{ label: 'inflow',      // label to use in the legend for this line.
								       color: '#7FFF00'
								},
								{ label: 'outflow',      // label to use in the legend for this line.
								       color: '#D80000'
								}
								
							   ]	,
						legend: {
							     show: true,
							     location: 'se',     // compass direction, nw, n, ne, e, se, s, sw, w.
							     xoffset: 12,        // pixel offset of the legend box from the x (or x2) axis.
							     yoffset: 12,        // pixel offset of the legend box from the y (or y2) axis.
							    },
						
						
						
						}); 
					</script>
						</p:panel>
					</p:tab>
				
					<p:tab title="Energy">

						<h:panelGrid columns="1" cellpadding="10">
							<!-- TODO: powertype icons	<p:graphicImage value="${broker.appearance.iconLocation}"
						width="85" height="85" />  -->
							<h:panelGrid columns="2" cellpadding="10">
								<h:outputText value="Energy consumption:" />
								<h:outputText
									value="#{customer.customerModel.energyConsumption} kWh"
									style="font-weight: bold" />
								<h:outputText value="Energy production:" />
								<h:outputText
									value="#{customer.customerModel.energyProduction} kWh"
									style="font-weight: bold" />
								<h:outputText value="Total:" />
								<h:outputText value="#{customer.customerModel.totalEnergy} kWh"
									style="font-weight: bold" />
							</h:panelGrid>

						</h:panelGrid>

						<p:panel
							rendered="#{not empty customer.customerJson.totalkWhLineChartData}">
							<div id="totalkWhLineChartData#{customer.customerInfo.id}"
								style="width: 700px; height: 350px"></div>
							<script type="text/javascript">
				
		 			if (window.totalkWhLineChartData#{customer.customerInfo.id}!=null) {
						window.totalkWhLineChartData#{customer.customerInfo.id}.destroy();					
					}
					window.totalkWhLineChartData#{customer.customerInfo.id} = $.jqplot('totalkWhLineChartData#{customer.customerInfo.id}', [ #{customer.customerJson.totalkWhLineChartData},#{customer.customerJson.productionKWhLineChartData},#{customer.customerJson.consumptionKWhLineChartData} ],{
						title: 'Energy', 
						axesDefaults: {
						        labelRenderer: $.jqplot.CanvasAxisLabelRenderer},
						axes: {
							xaxis: {
						            label: "timeslot",
						            pad: 0},
						    yaxis: {
						            label: "kWh"}},
						seriesDefaults: {
							showMarker: false
						},
						series:[
								{ label: 'total',      // label to use in the legend for this line.
								       color: '#000000'
								},
								{ label: 'production',      // label to use in the legend for this line.
								       color: '#7FFF00'
								},
								{ label: 'consumption',      // label to use in the legend for this line.
								       color: '#D80000'
								}
								
							   ]	,
						legend: {
							     show: true,
							     location: 'se',     // compass direction, nw, n, ne, e, se, s, sw, w.
							     xoffset: 12,        // pixel offset of the legend box from the x (or x2) axis.
							     yoffset: 12,        // pixel offset of the legend box from the y (or y2) axis.
							    },
						
						
						
						}); 
					</script>
						</p:panel>
					</p:tab>

					<p:tab title="Bootstrap">
					<p:panel
							rendered="#{not empty customer.customerJson.bootstrapLineChartData}">
							<div id="bootstrapLineChartData#{customer.customerInfo.id}"
								style="width: 700px; height: 350px"></div>
							<script type="text/javascript">
				
		 			if (window.bootstrapLineChartData#{customer.customerInfo.id}!=null) {
						window.bootstrapLineChartData#{customer.customerInfo.id}.destroy();					
					}
					window.bootstrapLineChartData#{customer.customerInfo.id} = $.jqplot('bootstrapLineChartData#{customer.customerInfo.id}', [ #{customer.customerJson.bootstrapLineChartData}],{
						title: 'Net usage', 
						axesDefaults: {
						        labelRenderer: $.jqplot.CanvasAxisLabelRenderer},
						axes: {
							xaxis: {
						            label: "time",
						            pad: 0},
						    yaxis: {
						            label: "kWh"}},
						seriesDefaults: {
							showMarker: false
						},
						series:[
								{ label: 'usage',      // label to use in the legend for this line.
								       color: '#000000'
								},
																
							   ]	/*,
						legend: {
							     show: true,
							     location: 'se',     // compass direction, nw, n, ne, e, se, s, sw, w.
							     xoffset: 12,        // pixel offset of the legend box from the x (or x2) axis.
							     yoffset: 12,        // pixel offset of the legend box from the y (or y2) axis.
							    },
							   */
						
						
						}); 
					</script>
						</p:panel>
					
					</p:tab>



				</p:tabView>





			</p:tab>

		</p:tabView>



	</ui:fragment>
</h:body>

</html>

