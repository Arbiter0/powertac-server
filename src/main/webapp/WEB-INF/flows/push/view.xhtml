<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	template="/WEB-INF/layouts/visualizer/master.xhtml">

	<!-- <ui:define name="title">Customers</ui:define> -->

	<ui:define name="headInclude">
	
	<h:outputScript library="js" name="MetroJs.js"/>
	<h:outputStylesheet library="css" name="MetroJs.css"/>
	
	
	
		<script type="text/javascript">
			function handleMessage(data) {
				$('.display1').html(data);
			}
		</script>
		
		<script type="text/javascript">
			function handleBrokersMessage(data) {
				$('.display1').html(data);
			}
		</script>


			<script type="text/javascript">
			var chart;
		</script>
	

	</ui:define>

	<ui:define name="content">
		<h:body>
		
	<h1>FlipList Simple</h1>
<div class="mango">
    <div class="list-tile">
        <span class="tile-title">flip list</span>
        <ul id="flip1" class="flip-list fourTiles" data-initdelay="500" data-mode="flip-list" data-delay="3000">
            <li>
                <div class="myClass"><!-- Put images or other content here --></div>
                <div>LOLEMBE</div>
            </li>
            <li>
                <div class="myClass"><!-- Put images or other content here --></div>
                <div><!-- Put images or other content here --></div>
            </li>
            <li>
                <div class="myClass"><!-- Put images or other content here --></div>
                <div><!-- Put images or other content here --></div>
            </li>
            <li data-direction="horizontal">
                <div class="myClass"><!-- Put images or other content here --></div>
                <div><!-- Put images or other content here --></div>
            </li>
        </ul>
    </div>
</div>

<script type="text/javascript">
//flip-list simple
//using data attributes
$(".flip-list").liveTile();
//without data-attributes
//$("#flip1").liveTile({ delay:3000, initDelay:500, mode:'flip-list' });
</script>
		

			<h:form>
				<h:outputText value="#{globalCounterBean.count}" styleClass="display1" />
				<p:commandButton value="Click"
					actionListener="#{globalCounterBean.increment}" />
			</h:form>
			<p:socket onMessage="handleMessage" channel="/counter" />
			
			<p:socket onMessage="handleBrokersMessage" channel="/brokers" />
					
			 <div id="container" style="width: 700px; height: 400px; margin: 0 auto"></div>
			 <script type="text/javascript">


$(function () {

	window.chart = new Highcharts.Chart({
	            
	    chart: {
	        renderTo: 'container',
	        polar: true,
	        type: 'line'
	    },
	    
	    title: {
	        text: 'Budget vs spending',
	        x: -80
	    },
	    
	    pane: {
	    	size: '80%'
	    },
	    
	    xAxis: {
	        categories: ['Sales', 'Marketing', 'Development', 'Customer Support', 
	                'Information Technology', 'Administration'],
	        tickmarkPlacement: 'on',
	        lineWidth: 0
	    },
	        
	    yAxis: {
	        gridLineInterpolation: 'polygon',
	        lineWidth: 0,
	        min: 0
	    },
	    
	    tooltip: {
	    	shared: true,
	        valuePrefix: '$'
	    },
	    
	    legend: {
	        align: 'right',
	        verticalAlign: 'top',
	        y: 100,
	        layout: 'vertical'
	    },
	    
	    series: [{
	        name: 'Allocated Budget',
	        data: [43000, 19000, 60000, 35000, 17000, 10000],
	        pointPlacement: 'on'
	    }, {
	        name: 'Actual Spending',
	        data: [50000, 39000, 42000, 31000, 26000, 14000],
	        pointPlacement: 'on'
	    }]
	
	});
});
//})(jQuery);
</script>


	 <p:tabView value="#{brokersBean.brokerList}" var="broker">
	<p:tab  title="#{broker.name}">
	<p:panel>
KOLOR:	#{broker.appearance.colorCode}
L:	#{broker.balancing.lastKwh}
TOTALBALANCING:	#{broker.balancing.totalKwh}
TOTALDISTRI:	#{broker.distributionData.kWh}

GRADE: #{broker.balancing.grade}
<!-- 	#{broker.balancing.kWhImbalanceJson}
	#{broker.balancing.priceImbalanceJson}
	#{broker.balancing.unitPriceImbalanceJson} -->
	
NORDERS:	#{broker.wholesale.noOrders}
NOMARKETTX:	#{broker.wholesale.noMarketTx}
GRADE:	#{broker.wholesale.grade}
	
	
	
	</p:panel>
	</p:tab>
	
	</p:tabView>

		</h:body>





	</ui:define>

</ui:composition>